(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 *)

type transactionexecution = [
| `Pending [@printer fun fmt _ -> Format.pp_print_string fmt "Pending"] [@name "Pending"]
| `Success [@printer fun fmt _ -> Format.pp_print_string fmt "Success"] [@name "Success"]
| `Failure [@printer fun fmt _ -> Format.pp_print_string fmt "Failure"] [@name "Failure"]
] [@@deriving yojson, show { with_path = false }];;

let transactionexecution_of_yojson json = transactionexecution_of_yojson (`List [json])
let transactionexecution_to_yojson e =
    match transactionexecution_to_yojson e with
    | `List [json] -> json
    | json -> json

type signingalgorithm = [
| `BLSBLS12381 [@printer fun fmt _ -> Format.pp_print_string fmt "BLSBLS12381"] [@name "BLSBLS12381"]
| `ECDSAP256 [@printer fun fmt _ -> Format.pp_print_string fmt "ECDSAP256"] [@name "ECDSAP256"]
| `ECDSASecp256k1 [@printer fun fmt _ -> Format.pp_print_string fmt "ECDSASecp256k1"] [@name "ECDSASecp256k1"]
] [@@deriving yojson, show { with_path = false }];;

let signingalgorithm_of_yojson json = signingalgorithm_of_yojson (`List [json])
let signingalgorithm_to_yojson e =
    match signingalgorithm_to_yojson e with
    | `List [json] -> json
    | json -> json

type transactionstatus = [
| `Pending [@printer fun fmt _ -> Format.pp_print_string fmt "Pending"] [@name "Pending"]
| `Finalized [@printer fun fmt _ -> Format.pp_print_string fmt "Finalized"] [@name "Finalized"]
| `Executed [@printer fun fmt _ -> Format.pp_print_string fmt "Executed"] [@name "Executed"]
| `Sealed [@printer fun fmt _ -> Format.pp_print_string fmt "Sealed"] [@name "Sealed"]
| `Expired [@printer fun fmt _ -> Format.pp_print_string fmt "Expired"] [@name "Expired"]
] [@@deriving yojson, show { with_path = false }];;

let transactionstatus_of_yojson json = transactionstatus_of_yojson (`List [json])
let transactionstatus_to_yojson e =
    match transactionstatus_to_yojson e with
    | `List [json] -> json
    | json -> json

type hashingalgorithm = [
| `SHA2_256 [@printer fun fmt _ -> Format.pp_print_string fmt "SHA2_256"] [@name "SHA2_256"]
| `SHA2_384 [@printer fun fmt _ -> Format.pp_print_string fmt "SHA2_384"] [@name "SHA2_384"]
| `SHA3_256 [@printer fun fmt _ -> Format.pp_print_string fmt "SHA3_256"] [@name "SHA3_256"]
| `SHA3_384 [@printer fun fmt _ -> Format.pp_print_string fmt "SHA3_384"] [@name "SHA3_384"]
| `KMAC128 [@printer fun fmt _ -> Format.pp_print_string fmt "KMAC128"] [@name "KMAC128"]
] [@@deriving yojson, show { with_path = false }];;

let hashingalgorithm_of_yojson json = hashingalgorithm_of_yojson (`List [json])
let hashingalgorithm_to_yojson e =
    match hashingalgorithm_to_yojson e with
    | `List [json] -> json
    | json -> json

type blockheight_oneof = [
| `Final [@printer fun fmt _ -> Format.pp_print_string fmt "final"] [@name "final"]
| `Sealed [@printer fun fmt _ -> Format.pp_print_string fmt "sealed"] [@name "sealed"]
] [@@deriving yojson, show { with_path = false }];;

let blockheight_oneof_of_yojson json = blockheight_oneof_of_yojson (`List [json])
let blockheight_oneof_to_yojson e =
    match blockheight_oneof_to_yojson e with
    | `List [json] -> json
    | json -> json
