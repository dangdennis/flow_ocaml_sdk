(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 *)

type t = {
    (* A 32-byte unique identifier for an entity. *)
    id: string;
    (* Base64 encoded Cadence script. *)
    script: string;
    (* Array of Base64 encoded arguments with in [JSON-Cadence interchange format](https://docs.onflow.org/cadence/json-cadence-spec/). *)
    arguments: string list;
    (* A 32-byte unique identifier for an entity. *)
    reference_block_id: string;
    (* The limit on the amount of computation a transaction is allowed to preform. *)
    gas_limit: string;
    (* The 8-byte address of an account. *)
    payer: string;
    proposal_key: Proposal_key.t;
    authorizers: string list;
    payload_signatures: Transaction_signature.t list;
    envelope_signatures: Transaction_signature.t list;
    _result: Transaction_result.t option [@default None];
    _expandable: Transaction__expandable.t;
    _links: Links.t option [@default None];
} [@@deriving yojson { strict = false }, show ];;

let create (id : string) (script : string) (arguments : string list) (reference_block_id : string) (gas_limit : string) (payer : string) (proposal_key : Proposal_key.t) (authorizers : string list) (payload_signatures : Transaction_signature.t list) (envelope_signatures : Transaction_signature.t list) (_expandable : Transaction__expandable.t) : t = {
    id = id;
    script = script;
    arguments = arguments;
    reference_block_id = reference_block_id;
    gas_limit = gas_limit;
    payer = payer;
    proposal_key = proposal_key;
    authorizers = authorizers;
    payload_signatures = payload_signatures;
    envelope_signatures = envelope_signatures;
    _result = None;
    _expandable = _expandable;
    _links = None;
}

